{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyPress","event","setState","window","addEventListener","this","removeEventListener","message","className","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,IAFT,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,OAAOC,iBAAiB,QAASC,KAAKL,kBAN1C,kCASE,WACEG,OAAOG,oBAAoB,QAASD,KAAKL,kBAV7C,oBAiBE,WACE,IAAIO,EAAU,0BAMd,MAJuB,KAAnBF,KAAKP,MAAMC,MACbQ,EAAO,mCAA+BF,KAAKP,MAAMC,IAA1C,MAIP,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BD,UA1BrC,GAAyBE,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0667d1fd.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends Component {\n  state: Readonly<State> = {\n    key: '',\n  };\n\n  componentDidMount() {\n    window.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    let message = 'Nothing was pressed yet';\n\n    if (this.state.key !== '') {\n      message = `The last pressed key is [${this.state.key}]`;\n    }\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{message}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}